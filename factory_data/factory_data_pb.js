// source: factory_data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.resourceMgr.CmdGetLines', null, global);
goog.exportSymbol('proto.resourceMgr.CmdGetMachines', null, global);
goog.exportSymbol('proto.resourceMgr.FacdataCmd', null, global);
goog.exportSymbol('proto.resourceMgr.FacdataCmd.PayloadCase', null, global);
goog.exportSymbol('proto.resourceMgr.FacdataMsgType', null, global);
goog.exportSymbol('proto.resourceMgr.FacdataRsp', null, global);
goog.exportSymbol('proto.resourceMgr.FacdataRsp.PayloadCase', null, global);
goog.exportSymbol('proto.resourceMgr.RspGetLines', null, global);
goog.exportSymbol('proto.resourceMgr.RspGetMachines', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resourceMgr.FacdataCmd = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.resourceMgr.FacdataCmd.oneofGroups_);
};
goog.inherits(proto.resourceMgr.FacdataCmd, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resourceMgr.FacdataCmd.displayName = 'proto.resourceMgr.FacdataCmd';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resourceMgr.FacdataRsp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.resourceMgr.FacdataRsp.oneofGroups_);
};
goog.inherits(proto.resourceMgr.FacdataRsp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resourceMgr.FacdataRsp.displayName = 'proto.resourceMgr.FacdataRsp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resourceMgr.CmdGetLines = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resourceMgr.CmdGetLines, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resourceMgr.CmdGetLines.displayName = 'proto.resourceMgr.CmdGetLines';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resourceMgr.RspGetLines = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resourceMgr.RspGetLines, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resourceMgr.RspGetLines.displayName = 'proto.resourceMgr.RspGetLines';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resourceMgr.CmdGetMachines = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resourceMgr.CmdGetMachines, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resourceMgr.CmdGetMachines.displayName = 'proto.resourceMgr.CmdGetMachines';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resourceMgr.RspGetMachines = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resourceMgr.RspGetMachines, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resourceMgr.RspGetMachines.displayName = 'proto.resourceMgr.RspGetMachines';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.resourceMgr.FacdataCmd.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.resourceMgr.FacdataCmd.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  CMDGETLINES: 4,
  CMDGETMACHINES: 5
};

/**
 * @return {proto.resourceMgr.FacdataCmd.PayloadCase}
 */
proto.resourceMgr.FacdataCmd.prototype.getPayloadCase = function() {
  return /** @type {proto.resourceMgr.FacdataCmd.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.resourceMgr.FacdataCmd.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resourceMgr.FacdataCmd.prototype.toObject = function(opt_includeInstance) {
  return proto.resourceMgr.FacdataCmd.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resourceMgr.FacdataCmd} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.FacdataCmd.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    responsequeue: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cmdgetlines: (f = msg.getCmdgetlines()) && proto.resourceMgr.CmdGetLines.toObject(includeInstance, f),
    cmdgetmachines: (f = msg.getCmdgetmachines()) && proto.resourceMgr.CmdGetMachines.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resourceMgr.FacdataCmd}
 */
proto.resourceMgr.FacdataCmd.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resourceMgr.FacdataCmd;
  return proto.resourceMgr.FacdataCmd.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resourceMgr.FacdataCmd} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resourceMgr.FacdataCmd}
 */
proto.resourceMgr.FacdataCmd.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.resourceMgr.FacdataMsgType} */ (reader.readEnum());
      msg.setMsgtype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsequeue(value);
      break;
    case 4:
      var value = new proto.resourceMgr.CmdGetLines;
      reader.readMessage(value,proto.resourceMgr.CmdGetLines.deserializeBinaryFromReader);
      msg.setCmdgetlines(value);
      break;
    case 5:
      var value = new proto.resourceMgr.CmdGetMachines;
      reader.readMessage(value,proto.resourceMgr.CmdGetMachines.deserializeBinaryFromReader);
      msg.setCmdgetmachines(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resourceMgr.FacdataCmd.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resourceMgr.FacdataCmd.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resourceMgr.FacdataCmd} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.FacdataCmd.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgtype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getResponsequeue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCmdgetlines();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.resourceMgr.CmdGetLines.serializeBinaryToWriter
    );
  }
  f = message.getCmdgetmachines();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.resourceMgr.CmdGetMachines.serializeBinaryToWriter
    );
  }
};


/**
 * optional FacdataMsgType msgType = 1;
 * @return {!proto.resourceMgr.FacdataMsgType}
 */
proto.resourceMgr.FacdataCmd.prototype.getMsgtype = function() {
  return /** @type {!proto.resourceMgr.FacdataMsgType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.resourceMgr.FacdataMsgType} value
 * @return {!proto.resourceMgr.FacdataCmd} returns this
 */
proto.resourceMgr.FacdataCmd.prototype.setMsgtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string responseQueue = 2;
 * @return {string}
 */
proto.resourceMgr.FacdataCmd.prototype.getResponsequeue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.resourceMgr.FacdataCmd} returns this
 */
proto.resourceMgr.FacdataCmd.prototype.setResponsequeue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CmdGetLines cmdGetLines = 4;
 * @return {?proto.resourceMgr.CmdGetLines}
 */
proto.resourceMgr.FacdataCmd.prototype.getCmdgetlines = function() {
  return /** @type{?proto.resourceMgr.CmdGetLines} */ (
    jspb.Message.getWrapperField(this, proto.resourceMgr.CmdGetLines, 4));
};


/**
 * @param {?proto.resourceMgr.CmdGetLines|undefined} value
 * @return {!proto.resourceMgr.FacdataCmd} returns this
*/
proto.resourceMgr.FacdataCmd.prototype.setCmdgetlines = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.resourceMgr.FacdataCmd.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resourceMgr.FacdataCmd} returns this
 */
proto.resourceMgr.FacdataCmd.prototype.clearCmdgetlines = function() {
  return this.setCmdgetlines(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resourceMgr.FacdataCmd.prototype.hasCmdgetlines = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CmdGetMachines cmdGetMachines = 5;
 * @return {?proto.resourceMgr.CmdGetMachines}
 */
proto.resourceMgr.FacdataCmd.prototype.getCmdgetmachines = function() {
  return /** @type{?proto.resourceMgr.CmdGetMachines} */ (
    jspb.Message.getWrapperField(this, proto.resourceMgr.CmdGetMachines, 5));
};


/**
 * @param {?proto.resourceMgr.CmdGetMachines|undefined} value
 * @return {!proto.resourceMgr.FacdataCmd} returns this
*/
proto.resourceMgr.FacdataCmd.prototype.setCmdgetmachines = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.resourceMgr.FacdataCmd.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resourceMgr.FacdataCmd} returns this
 */
proto.resourceMgr.FacdataCmd.prototype.clearCmdgetmachines = function() {
  return this.setCmdgetmachines(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resourceMgr.FacdataCmd.prototype.hasCmdgetmachines = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.resourceMgr.FacdataRsp.oneofGroups_ = [[5,6]];

/**
 * @enum {number}
 */
proto.resourceMgr.FacdataRsp.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  RSPGETLINES: 5,
  RSPGETMACHINES: 6
};

/**
 * @return {proto.resourceMgr.FacdataRsp.PayloadCase}
 */
proto.resourceMgr.FacdataRsp.prototype.getPayloadCase = function() {
  return /** @type {proto.resourceMgr.FacdataRsp.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.resourceMgr.FacdataRsp.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resourceMgr.FacdataRsp.prototype.toObject = function(opt_includeInstance) {
  return proto.resourceMgr.FacdataRsp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resourceMgr.FacdataRsp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.FacdataRsp.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    errcode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    errmsg: jspb.Message.getFieldWithDefault(msg, 3, ""),
    rspgetlines: (f = msg.getRspgetlines()) && proto.resourceMgr.RspGetLines.toObject(includeInstance, f),
    rspgetmachines: (f = msg.getRspgetmachines()) && proto.resourceMgr.RspGetMachines.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resourceMgr.FacdataRsp}
 */
proto.resourceMgr.FacdataRsp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resourceMgr.FacdataRsp;
  return proto.resourceMgr.FacdataRsp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resourceMgr.FacdataRsp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resourceMgr.FacdataRsp}
 */
proto.resourceMgr.FacdataRsp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.resourceMgr.FacdataMsgType} */ (reader.readEnum());
      msg.setMsgtype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setErrcode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrmsg(value);
      break;
    case 5:
      var value = new proto.resourceMgr.RspGetLines;
      reader.readMessage(value,proto.resourceMgr.RspGetLines.deserializeBinaryFromReader);
      msg.setRspgetlines(value);
      break;
    case 6:
      var value = new proto.resourceMgr.RspGetMachines;
      reader.readMessage(value,proto.resourceMgr.RspGetMachines.deserializeBinaryFromReader);
      msg.setRspgetmachines(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resourceMgr.FacdataRsp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resourceMgr.FacdataRsp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resourceMgr.FacdataRsp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.FacdataRsp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgtype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getErrcode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getErrmsg();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRspgetlines();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.resourceMgr.RspGetLines.serializeBinaryToWriter
    );
  }
  f = message.getRspgetmachines();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.resourceMgr.RspGetMachines.serializeBinaryToWriter
    );
  }
};


/**
 * optional FacdataMsgType msgType = 1;
 * @return {!proto.resourceMgr.FacdataMsgType}
 */
proto.resourceMgr.FacdataRsp.prototype.getMsgtype = function() {
  return /** @type {!proto.resourceMgr.FacdataMsgType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.resourceMgr.FacdataMsgType} value
 * @return {!proto.resourceMgr.FacdataRsp} returns this
 */
proto.resourceMgr.FacdataRsp.prototype.setMsgtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 errCode = 2;
 * @return {number}
 */
proto.resourceMgr.FacdataRsp.prototype.getErrcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.resourceMgr.FacdataRsp} returns this
 */
proto.resourceMgr.FacdataRsp.prototype.setErrcode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string errMsg = 3;
 * @return {string}
 */
proto.resourceMgr.FacdataRsp.prototype.getErrmsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.resourceMgr.FacdataRsp} returns this
 */
proto.resourceMgr.FacdataRsp.prototype.setErrmsg = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional RspGetLines rspGetLines = 5;
 * @return {?proto.resourceMgr.RspGetLines}
 */
proto.resourceMgr.FacdataRsp.prototype.getRspgetlines = function() {
  return /** @type{?proto.resourceMgr.RspGetLines} */ (
    jspb.Message.getWrapperField(this, proto.resourceMgr.RspGetLines, 5));
};


/**
 * @param {?proto.resourceMgr.RspGetLines|undefined} value
 * @return {!proto.resourceMgr.FacdataRsp} returns this
*/
proto.resourceMgr.FacdataRsp.prototype.setRspgetlines = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.resourceMgr.FacdataRsp.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resourceMgr.FacdataRsp} returns this
 */
proto.resourceMgr.FacdataRsp.prototype.clearRspgetlines = function() {
  return this.setRspgetlines(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resourceMgr.FacdataRsp.prototype.hasRspgetlines = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RspGetMachines rspGetMachines = 6;
 * @return {?proto.resourceMgr.RspGetMachines}
 */
proto.resourceMgr.FacdataRsp.prototype.getRspgetmachines = function() {
  return /** @type{?proto.resourceMgr.RspGetMachines} */ (
    jspb.Message.getWrapperField(this, proto.resourceMgr.RspGetMachines, 6));
};


/**
 * @param {?proto.resourceMgr.RspGetMachines|undefined} value
 * @return {!proto.resourceMgr.FacdataRsp} returns this
*/
proto.resourceMgr.FacdataRsp.prototype.setRspgetmachines = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.resourceMgr.FacdataRsp.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resourceMgr.FacdataRsp} returns this
 */
proto.resourceMgr.FacdataRsp.prototype.clearRspgetmachines = function() {
  return this.setRspgetmachines(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resourceMgr.FacdataRsp.prototype.hasRspgetmachines = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resourceMgr.CmdGetLines.prototype.toObject = function(opt_includeInstance) {
  return proto.resourceMgr.CmdGetLines.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resourceMgr.CmdGetLines} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.CmdGetLines.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resourceMgr.CmdGetLines}
 */
proto.resourceMgr.CmdGetLines.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resourceMgr.CmdGetLines;
  return proto.resourceMgr.CmdGetLines.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resourceMgr.CmdGetLines} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resourceMgr.CmdGetLines}
 */
proto.resourceMgr.CmdGetLines.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resourceMgr.CmdGetLines.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resourceMgr.CmdGetLines.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resourceMgr.CmdGetLines} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.CmdGetLines.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resourceMgr.RspGetLines.prototype.toObject = function(opt_includeInstance) {
  return proto.resourceMgr.RspGetLines.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resourceMgr.RspGetLines} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.RspGetLines.toObject = function(includeInstance, msg) {
  var f, obj = {
    lines: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resourceMgr.RspGetLines}
 */
proto.resourceMgr.RspGetLines.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resourceMgr.RspGetLines;
  return proto.resourceMgr.RspGetLines.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resourceMgr.RspGetLines} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resourceMgr.RspGetLines}
 */
proto.resourceMgr.RspGetLines.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLines(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resourceMgr.RspGetLines.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resourceMgr.RspGetLines.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resourceMgr.RspGetLines} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.RspGetLines.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLines();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string lines = 3;
 * @return {string}
 */
proto.resourceMgr.RspGetLines.prototype.getLines = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.resourceMgr.RspGetLines} returns this
 */
proto.resourceMgr.RspGetLines.prototype.setLines = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resourceMgr.CmdGetMachines.prototype.toObject = function(opt_includeInstance) {
  return proto.resourceMgr.CmdGetMachines.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resourceMgr.CmdGetMachines} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.CmdGetMachines.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resourceMgr.CmdGetMachines}
 */
proto.resourceMgr.CmdGetMachines.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resourceMgr.CmdGetMachines;
  return proto.resourceMgr.CmdGetMachines.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resourceMgr.CmdGetMachines} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resourceMgr.CmdGetMachines}
 */
proto.resourceMgr.CmdGetMachines.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resourceMgr.CmdGetMachines.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resourceMgr.CmdGetMachines.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resourceMgr.CmdGetMachines} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.CmdGetMachines.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resourceMgr.RspGetMachines.prototype.toObject = function(opt_includeInstance) {
  return proto.resourceMgr.RspGetMachines.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resourceMgr.RspGetMachines} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.RspGetMachines.toObject = function(includeInstance, msg) {
  var f, obj = {
    machines: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resourceMgr.RspGetMachines}
 */
proto.resourceMgr.RspGetMachines.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resourceMgr.RspGetMachines;
  return proto.resourceMgr.RspGetMachines.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resourceMgr.RspGetMachines} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resourceMgr.RspGetMachines}
 */
proto.resourceMgr.RspGetMachines.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMachines(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resourceMgr.RspGetMachines.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resourceMgr.RspGetMachines.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resourceMgr.RspGetMachines} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.RspGetMachines.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMachines();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string machines = 3;
 * @return {string}
 */
proto.resourceMgr.RspGetMachines.prototype.getMachines = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.resourceMgr.RspGetMachines} returns this
 */
proto.resourceMgr.RspGetMachines.prototype.setMachines = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.resourceMgr.FacdataMsgType = {
  NOTYPE: 0,
  GETLINESTYPE: 1,
  GETMACHINESTYPE: 2
};

goog.object.extend(exports, proto.resourceMgr);
