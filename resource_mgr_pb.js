// source: resource_mgr.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.resourceMgr.CmdGetStatus', null, global);
goog.exportSymbol('proto.resourceMgr.CmdMsg', null, global);
goog.exportSymbol('proto.resourceMgr.CmdMsg.PayloadCase', null, global);
goog.exportSymbol('proto.resourceMgr.CmdReserveResource', null, global);
goog.exportSymbol('proto.resourceMgr.CmdSendRequest', null, global);
goog.exportSymbol('proto.resourceMgr.RspGetStatus', null, global);
goog.exportSymbol('proto.resourceMgr.RspMsg', null, global);
goog.exportSymbol('proto.resourceMgr.RspMsg.PayloadCase', null, global);
goog.exportSymbol('proto.resourceMgr.RspReserveResource', null, global);
goog.exportSymbol('proto.resourceMgr.RspSendRequest', null, global);
goog.exportSymbol('proto.resourceMgr.cmdMsgType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resourceMgr.CmdMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.resourceMgr.CmdMsg.oneofGroups_);
};
goog.inherits(proto.resourceMgr.CmdMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resourceMgr.CmdMsg.displayName = 'proto.resourceMgr.CmdMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resourceMgr.RspMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.resourceMgr.RspMsg.oneofGroups_);
};
goog.inherits(proto.resourceMgr.RspMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resourceMgr.RspMsg.displayName = 'proto.resourceMgr.RspMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resourceMgr.CmdSendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resourceMgr.CmdSendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resourceMgr.CmdSendRequest.displayName = 'proto.resourceMgr.CmdSendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resourceMgr.RspSendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resourceMgr.RspSendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resourceMgr.RspSendRequest.displayName = 'proto.resourceMgr.RspSendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resourceMgr.CmdReserveResource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resourceMgr.CmdReserveResource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resourceMgr.CmdReserveResource.displayName = 'proto.resourceMgr.CmdReserveResource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resourceMgr.RspReserveResource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resourceMgr.RspReserveResource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resourceMgr.RspReserveResource.displayName = 'proto.resourceMgr.RspReserveResource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resourceMgr.CmdGetStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resourceMgr.CmdGetStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resourceMgr.CmdGetStatus.displayName = 'proto.resourceMgr.CmdGetStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resourceMgr.RspGetStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resourceMgr.RspGetStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resourceMgr.RspGetStatus.displayName = 'proto.resourceMgr.RspGetStatus';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.resourceMgr.CmdMsg.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.resourceMgr.CmdMsg.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  CMDSENDREQUEST: 3,
  CMDRESERVERESOURCE: 4,
  CMDGETSTATUS: 5
};

/**
 * @return {proto.resourceMgr.CmdMsg.PayloadCase}
 */
proto.resourceMgr.CmdMsg.prototype.getPayloadCase = function() {
  return /** @type {proto.resourceMgr.CmdMsg.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.resourceMgr.CmdMsg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resourceMgr.CmdMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.resourceMgr.CmdMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resourceMgr.CmdMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.CmdMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    cmdtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    responsequeue: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cmdsendrequest: (f = msg.getCmdsendrequest()) && proto.resourceMgr.CmdSendRequest.toObject(includeInstance, f),
    cmdreserveresource: (f = msg.getCmdreserveresource()) && proto.resourceMgr.CmdReserveResource.toObject(includeInstance, f),
    cmdgetstatus: (f = msg.getCmdgetstatus()) && proto.resourceMgr.CmdGetStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resourceMgr.CmdMsg}
 */
proto.resourceMgr.CmdMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resourceMgr.CmdMsg;
  return proto.resourceMgr.CmdMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resourceMgr.CmdMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resourceMgr.CmdMsg}
 */
proto.resourceMgr.CmdMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.resourceMgr.cmdMsgType} */ (reader.readEnum());
      msg.setCmdtype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsequeue(value);
      break;
    case 3:
      var value = new proto.resourceMgr.CmdSendRequest;
      reader.readMessage(value,proto.resourceMgr.CmdSendRequest.deserializeBinaryFromReader);
      msg.setCmdsendrequest(value);
      break;
    case 4:
      var value = new proto.resourceMgr.CmdReserveResource;
      reader.readMessage(value,proto.resourceMgr.CmdReserveResource.deserializeBinaryFromReader);
      msg.setCmdreserveresource(value);
      break;
    case 5:
      var value = new proto.resourceMgr.CmdGetStatus;
      reader.readMessage(value,proto.resourceMgr.CmdGetStatus.deserializeBinaryFromReader);
      msg.setCmdgetstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resourceMgr.CmdMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resourceMgr.CmdMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resourceMgr.CmdMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.CmdMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCmdtype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getResponsequeue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCmdsendrequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.resourceMgr.CmdSendRequest.serializeBinaryToWriter
    );
  }
  f = message.getCmdreserveresource();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.resourceMgr.CmdReserveResource.serializeBinaryToWriter
    );
  }
  f = message.getCmdgetstatus();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.resourceMgr.CmdGetStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional cmdMsgType cmdType = 1;
 * @return {!proto.resourceMgr.cmdMsgType}
 */
proto.resourceMgr.CmdMsg.prototype.getCmdtype = function() {
  return /** @type {!proto.resourceMgr.cmdMsgType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.resourceMgr.cmdMsgType} value
 * @return {!proto.resourceMgr.CmdMsg} returns this
 */
proto.resourceMgr.CmdMsg.prototype.setCmdtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string responseQueue = 2;
 * @return {string}
 */
proto.resourceMgr.CmdMsg.prototype.getResponsequeue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.resourceMgr.CmdMsg} returns this
 */
proto.resourceMgr.CmdMsg.prototype.setResponsequeue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CmdSendRequest cmdSendRequest = 3;
 * @return {?proto.resourceMgr.CmdSendRequest}
 */
proto.resourceMgr.CmdMsg.prototype.getCmdsendrequest = function() {
  return /** @type{?proto.resourceMgr.CmdSendRequest} */ (
    jspb.Message.getWrapperField(this, proto.resourceMgr.CmdSendRequest, 3));
};


/**
 * @param {?proto.resourceMgr.CmdSendRequest|undefined} value
 * @return {!proto.resourceMgr.CmdMsg} returns this
*/
proto.resourceMgr.CmdMsg.prototype.setCmdsendrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.resourceMgr.CmdMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resourceMgr.CmdMsg} returns this
 */
proto.resourceMgr.CmdMsg.prototype.clearCmdsendrequest = function() {
  return this.setCmdsendrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resourceMgr.CmdMsg.prototype.hasCmdsendrequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CmdReserveResource cmdReserveResource = 4;
 * @return {?proto.resourceMgr.CmdReserveResource}
 */
proto.resourceMgr.CmdMsg.prototype.getCmdreserveresource = function() {
  return /** @type{?proto.resourceMgr.CmdReserveResource} */ (
    jspb.Message.getWrapperField(this, proto.resourceMgr.CmdReserveResource, 4));
};


/**
 * @param {?proto.resourceMgr.CmdReserveResource|undefined} value
 * @return {!proto.resourceMgr.CmdMsg} returns this
*/
proto.resourceMgr.CmdMsg.prototype.setCmdreserveresource = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.resourceMgr.CmdMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resourceMgr.CmdMsg} returns this
 */
proto.resourceMgr.CmdMsg.prototype.clearCmdreserveresource = function() {
  return this.setCmdreserveresource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resourceMgr.CmdMsg.prototype.hasCmdreserveresource = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CmdGetStatus cmdGetStatus = 5;
 * @return {?proto.resourceMgr.CmdGetStatus}
 */
proto.resourceMgr.CmdMsg.prototype.getCmdgetstatus = function() {
  return /** @type{?proto.resourceMgr.CmdGetStatus} */ (
    jspb.Message.getWrapperField(this, proto.resourceMgr.CmdGetStatus, 5));
};


/**
 * @param {?proto.resourceMgr.CmdGetStatus|undefined} value
 * @return {!proto.resourceMgr.CmdMsg} returns this
*/
proto.resourceMgr.CmdMsg.prototype.setCmdgetstatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.resourceMgr.CmdMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resourceMgr.CmdMsg} returns this
 */
proto.resourceMgr.CmdMsg.prototype.clearCmdgetstatus = function() {
  return this.setCmdgetstatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resourceMgr.CmdMsg.prototype.hasCmdgetstatus = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.resourceMgr.RspMsg.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.resourceMgr.RspMsg.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  RSPSENDREQUEST: 3,
  RSPRESERVERESOURCE: 4,
  RSPGETSTATUS: 5
};

/**
 * @return {proto.resourceMgr.RspMsg.PayloadCase}
 */
proto.resourceMgr.RspMsg.prototype.getPayloadCase = function() {
  return /** @type {proto.resourceMgr.RspMsg.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.resourceMgr.RspMsg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resourceMgr.RspMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.resourceMgr.RspMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resourceMgr.RspMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.RspMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    cmdtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rspsendrequest: (f = msg.getRspsendrequest()) && proto.resourceMgr.RspSendRequest.toObject(includeInstance, f),
    rspreserveresource: (f = msg.getRspreserveresource()) && proto.resourceMgr.RspReserveResource.toObject(includeInstance, f),
    rspgetstatus: (f = msg.getRspgetstatus()) && proto.resourceMgr.RspGetStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resourceMgr.RspMsg}
 */
proto.resourceMgr.RspMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resourceMgr.RspMsg;
  return proto.resourceMgr.RspMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resourceMgr.RspMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resourceMgr.RspMsg}
 */
proto.resourceMgr.RspMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.resourceMgr.cmdMsgType} */ (reader.readEnum());
      msg.setCmdtype(value);
      break;
    case 3:
      var value = new proto.resourceMgr.RspSendRequest;
      reader.readMessage(value,proto.resourceMgr.RspSendRequest.deserializeBinaryFromReader);
      msg.setRspsendrequest(value);
      break;
    case 4:
      var value = new proto.resourceMgr.RspReserveResource;
      reader.readMessage(value,proto.resourceMgr.RspReserveResource.deserializeBinaryFromReader);
      msg.setRspreserveresource(value);
      break;
    case 5:
      var value = new proto.resourceMgr.RspGetStatus;
      reader.readMessage(value,proto.resourceMgr.RspGetStatus.deserializeBinaryFromReader);
      msg.setRspgetstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resourceMgr.RspMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resourceMgr.RspMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resourceMgr.RspMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.RspMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCmdtype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRspsendrequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.resourceMgr.RspSendRequest.serializeBinaryToWriter
    );
  }
  f = message.getRspreserveresource();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.resourceMgr.RspReserveResource.serializeBinaryToWriter
    );
  }
  f = message.getRspgetstatus();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.resourceMgr.RspGetStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional cmdMsgType cmdType = 1;
 * @return {!proto.resourceMgr.cmdMsgType}
 */
proto.resourceMgr.RspMsg.prototype.getCmdtype = function() {
  return /** @type {!proto.resourceMgr.cmdMsgType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.resourceMgr.cmdMsgType} value
 * @return {!proto.resourceMgr.RspMsg} returns this
 */
proto.resourceMgr.RspMsg.prototype.setCmdtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional RspSendRequest rspSendRequest = 3;
 * @return {?proto.resourceMgr.RspSendRequest}
 */
proto.resourceMgr.RspMsg.prototype.getRspsendrequest = function() {
  return /** @type{?proto.resourceMgr.RspSendRequest} */ (
    jspb.Message.getWrapperField(this, proto.resourceMgr.RspSendRequest, 3));
};


/**
 * @param {?proto.resourceMgr.RspSendRequest|undefined} value
 * @return {!proto.resourceMgr.RspMsg} returns this
*/
proto.resourceMgr.RspMsg.prototype.setRspsendrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.resourceMgr.RspMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resourceMgr.RspMsg} returns this
 */
proto.resourceMgr.RspMsg.prototype.clearRspsendrequest = function() {
  return this.setRspsendrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resourceMgr.RspMsg.prototype.hasRspsendrequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RspReserveResource rspReserveResource = 4;
 * @return {?proto.resourceMgr.RspReserveResource}
 */
proto.resourceMgr.RspMsg.prototype.getRspreserveresource = function() {
  return /** @type{?proto.resourceMgr.RspReserveResource} */ (
    jspb.Message.getWrapperField(this, proto.resourceMgr.RspReserveResource, 4));
};


/**
 * @param {?proto.resourceMgr.RspReserveResource|undefined} value
 * @return {!proto.resourceMgr.RspMsg} returns this
*/
proto.resourceMgr.RspMsg.prototype.setRspreserveresource = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.resourceMgr.RspMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resourceMgr.RspMsg} returns this
 */
proto.resourceMgr.RspMsg.prototype.clearRspreserveresource = function() {
  return this.setRspreserveresource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resourceMgr.RspMsg.prototype.hasRspreserveresource = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RspGetStatus rspGetStatus = 5;
 * @return {?proto.resourceMgr.RspGetStatus}
 */
proto.resourceMgr.RspMsg.prototype.getRspgetstatus = function() {
  return /** @type{?proto.resourceMgr.RspGetStatus} */ (
    jspb.Message.getWrapperField(this, proto.resourceMgr.RspGetStatus, 5));
};


/**
 * @param {?proto.resourceMgr.RspGetStatus|undefined} value
 * @return {!proto.resourceMgr.RspMsg} returns this
*/
proto.resourceMgr.RspMsg.prototype.setRspgetstatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.resourceMgr.RspMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resourceMgr.RspMsg} returns this
 */
proto.resourceMgr.RspMsg.prototype.clearRspgetstatus = function() {
  return this.setRspgetstatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resourceMgr.RspMsg.prototype.hasRspgetstatus = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resourceMgr.CmdSendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.resourceMgr.CmdSendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resourceMgr.CmdSendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.CmdSendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reserveresource: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    request: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resourceMgr.CmdSendRequest}
 */
proto.resourceMgr.CmdSendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resourceMgr.CmdSendRequest;
  return proto.resourceMgr.CmdSendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resourceMgr.CmdSendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resourceMgr.CmdSendRequest}
 */
proto.resourceMgr.CmdSendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserveresource(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resourceMgr.CmdSendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resourceMgr.CmdSendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resourceMgr.CmdSendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.CmdSendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReserveresource();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getRequest();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string clientId = 1;
 * @return {string}
 */
proto.resourceMgr.CmdSendRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.resourceMgr.CmdSendRequest} returns this
 */
proto.resourceMgr.CmdSendRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool reserveResource = 2;
 * @return {boolean}
 */
proto.resourceMgr.CmdSendRequest.prototype.getReserveresource = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.resourceMgr.CmdSendRequest} returns this
 */
proto.resourceMgr.CmdSendRequest.prototype.setReserveresource = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string request = 3;
 * @return {string}
 */
proto.resourceMgr.CmdSendRequest.prototype.getRequest = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.resourceMgr.CmdSendRequest} returns this
 */
proto.resourceMgr.CmdSendRequest.prototype.setRequest = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resourceMgr.RspSendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.resourceMgr.RspSendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resourceMgr.RspSendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.RspSendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    errcode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    errmsg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resourceMgr.RspSendRequest}
 */
proto.resourceMgr.RspSendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resourceMgr.RspSendRequest;
  return proto.resourceMgr.RspSendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resourceMgr.RspSendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resourceMgr.RspSendRequest}
 */
proto.resourceMgr.RspSendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setErrcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrmsg(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resourceMgr.RspSendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resourceMgr.RspSendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resourceMgr.RspSendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.RspSendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrcode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getErrmsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 errCode = 1;
 * @return {number}
 */
proto.resourceMgr.RspSendRequest.prototype.getErrcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.resourceMgr.RspSendRequest} returns this
 */
proto.resourceMgr.RspSendRequest.prototype.setErrcode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string errMsg = 2;
 * @return {string}
 */
proto.resourceMgr.RspSendRequest.prototype.getErrmsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.resourceMgr.RspSendRequest} returns this
 */
proto.resourceMgr.RspSendRequest.prototype.setErrmsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string response = 3;
 * @return {string}
 */
proto.resourceMgr.RspSendRequest.prototype.getResponse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.resourceMgr.RspSendRequest} returns this
 */
proto.resourceMgr.RspSendRequest.prototype.setResponse = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resourceMgr.CmdReserveResource.prototype.toObject = function(opt_includeInstance) {
  return proto.resourceMgr.CmdReserveResource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resourceMgr.CmdReserveResource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.CmdReserveResource.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    request: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resourceMgr.CmdReserveResource}
 */
proto.resourceMgr.CmdReserveResource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resourceMgr.CmdReserveResource;
  return proto.resourceMgr.CmdReserveResource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resourceMgr.CmdReserveResource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resourceMgr.CmdReserveResource}
 */
proto.resourceMgr.CmdReserveResource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resourceMgr.CmdReserveResource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resourceMgr.CmdReserveResource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resourceMgr.CmdReserveResource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.CmdReserveResource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequest();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string clientId = 1;
 * @return {string}
 */
proto.resourceMgr.CmdReserveResource.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.resourceMgr.CmdReserveResource} returns this
 */
proto.resourceMgr.CmdReserveResource.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string request = 2;
 * @return {string}
 */
proto.resourceMgr.CmdReserveResource.prototype.getRequest = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.resourceMgr.CmdReserveResource} returns this
 */
proto.resourceMgr.CmdReserveResource.prototype.setRequest = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resourceMgr.RspReserveResource.prototype.toObject = function(opt_includeInstance) {
  return proto.resourceMgr.RspReserveResource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resourceMgr.RspReserveResource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.RspReserveResource.toObject = function(includeInstance, msg) {
  var f, obj = {
    errcode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    errmsg: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resourceMgr.RspReserveResource}
 */
proto.resourceMgr.RspReserveResource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resourceMgr.RspReserveResource;
  return proto.resourceMgr.RspReserveResource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resourceMgr.RspReserveResource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resourceMgr.RspReserveResource}
 */
proto.resourceMgr.RspReserveResource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setErrcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrmsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resourceMgr.RspReserveResource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resourceMgr.RspReserveResource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resourceMgr.RspReserveResource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.RspReserveResource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrcode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getErrmsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 errCode = 1;
 * @return {number}
 */
proto.resourceMgr.RspReserveResource.prototype.getErrcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.resourceMgr.RspReserveResource} returns this
 */
proto.resourceMgr.RspReserveResource.prototype.setErrcode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string errMsg = 2;
 * @return {string}
 */
proto.resourceMgr.RspReserveResource.prototype.getErrmsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.resourceMgr.RspReserveResource} returns this
 */
proto.resourceMgr.RspReserveResource.prototype.setErrmsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resourceMgr.CmdGetStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.resourceMgr.CmdGetStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resourceMgr.CmdGetStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.CmdGetStatus.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resourceMgr.CmdGetStatus}
 */
proto.resourceMgr.CmdGetStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resourceMgr.CmdGetStatus;
  return proto.resourceMgr.CmdGetStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resourceMgr.CmdGetStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resourceMgr.CmdGetStatus}
 */
proto.resourceMgr.CmdGetStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resourceMgr.CmdGetStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resourceMgr.CmdGetStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resourceMgr.CmdGetStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.CmdGetStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resourceMgr.RspGetStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.resourceMgr.RspGetStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resourceMgr.RspGetStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.RspGetStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    executingcmd: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    reserved: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    ownerclientid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resourceMgr.RspGetStatus}
 */
proto.resourceMgr.RspGetStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resourceMgr.RspGetStatus;
  return proto.resourceMgr.RspGetStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resourceMgr.RspGetStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resourceMgr.RspGetStatus}
 */
proto.resourceMgr.RspGetStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExecutingcmd(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerclientid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resourceMgr.RspGetStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resourceMgr.RspGetStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resourceMgr.RspGetStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resourceMgr.RspGetStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExecutingcmd();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getReserved();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getOwnerclientid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bool executingCmd = 1;
 * @return {boolean}
 */
proto.resourceMgr.RspGetStatus.prototype.getExecutingcmd = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.resourceMgr.RspGetStatus} returns this
 */
proto.resourceMgr.RspGetStatus.prototype.setExecutingcmd = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool reserved = 2;
 * @return {boolean}
 */
proto.resourceMgr.RspGetStatus.prototype.getReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.resourceMgr.RspGetStatus} returns this
 */
proto.resourceMgr.RspGetStatus.prototype.setReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string ownerClientId = 3;
 * @return {string}
 */
proto.resourceMgr.RspGetStatus.prototype.getOwnerclientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.resourceMgr.RspGetStatus} returns this
 */
proto.resourceMgr.RspGetStatus.prototype.setOwnerclientid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.resourceMgr.cmdMsgType = {
  CMDSENDREQUESTTYPE: 0,
  CMDRESERVERESOURCETYPE: 1,
  CMDGETSTATUSTYPE: 2
};

goog.object.extend(exports, proto.resourceMgr);
